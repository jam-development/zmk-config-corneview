/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  behaviors {
    tp_lalt_ret: tap_preferred_v1 {
      compatible = "zmk,behavior-hold-tap";
      label = "TP_LALT_RET";
      flavor = "tap-preferred";
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      bindings = <&kp LALT>, <&kp RET>;
    };

    tp_hyper_spc: tap_preferred_v2 {
      compatible = "zmk,behavior-hold-tap";
      label = "TP_HYPER_SPC";
      flavor = "tap-preferred";
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      bindings = <&kp LC(LS(LA(LGUI)))>, <&kp SPACE>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp TAB     &kp Q   &kp W     &kp E   &kp R     &kp T       &kp Y     &kp U     &kp I     &kp O     &kp P     &kp ESC
        &kp LCTRL   &kp A   &kp S     &kp D   &kp F     &kp G       &kp H     &kp J     &kp K     &kp L     &kp SEMI  &lt 1 SQT
        &kp LSHFT   &kp Z   &kp X     &kp C   &kp V     &kp B       &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT
                      &kp LGUI &mo 1 &tp_lalt_ret &tp_hyper_spc &kp BSPC &mo 2
      >;
    };

    layer_below {
      bindings = <
        &trans     &kp EXCL  &kp AT     &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp BSLH
        &trans     &kp N1    &kp N2     &kp N3    &kp N4     &kp N5       &kp MINUS &kp EQUAL &kp GRAVE       &kp LBKT  &kp RBKT &kp PIPE
        &kp LSHFT  &kp N6    &kp N7     &kp N8    &kp N9     &kp N0       &kp UNDER &kp PLUS  &kp TILDE       &kp LBRC  &kp RBRC &kp RSHFT
                       &kp LGUI &trans &tp_lalt_ret &tp_hyper_spc &kp BSPC &trans
      >;
    };

    layer_above {
      bindings = <
        &trans      &kp F1         &kp F2        &kp F3         &kp F4       &kp F5         &kp F6     &kp F7     &kp F8     &kp F9    &kp F10   &trans
        &trans      &kp C_PREV     &kp C_NEXT    &kp C_VOL_DN   &kp C_VOL_UP &kp C_PP       &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT &trans    &trans
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3 &bt BT_SEL 4   &trans     &trans     &trans     &trans    &trans    &trans
                              &trans     &trans     &trans        &trans     &trans     &trans
      >;
    };
  };
};
